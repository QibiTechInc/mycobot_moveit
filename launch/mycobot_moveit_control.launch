<?xml version="1.0" ?>
<launch>
    <arg name="model" default="$(find mycobot_moveit)/urdf/mycobot_urdf_gazebo.urdf" />
    <param name="robot_description" textfile="$(arg model)" />

    <!-- common -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- moveit setting -->
    <param name="robot_description_semantic" textfile="$(find mycobot_moveit)/config/firefighter.srdf" />
    <group ns="robot_description_planning">
        <rosparam command="load" file="$(find mycobot_moveit)/config/joint_limits.yaml"/>
    </group>
    <group ns="robot_description_kinematics">
        <rosparam command="load" file="$(find mycobot_moveit)/config/kinematics.yaml"/>
    </group>

    <arg name="planning_adapters" value="default_planner_request_adapters/AddTimeParameterization
		default_planner_request_adapters/FixWorkspaceBounds
		default_planner_request_adapters/FixStartStateBounds
		default_planner_request_adapters/FixStartStateCollision
		default_planner_request_adapters/FixStartStatePathConstraints" />

    <node name="move_group"  pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="">
        <!-- Set the display variable, in case OpenGL code is used internally -->
        <env name="DISPLAY" value="$(optenv DISPLAY :0)" />

        <!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot -->
        <param name="planning_scene_monitor/publish_planning_scene" value="true" />
        <param name="planning_scene_monitor/publish_geometry_updates" value="true" />
        <param name="planning_scene_monitor/publish_state_updates" value="true" />
        <param name="planning_scene_monitor/publish_transforms_updates" value="true" />

        <!-- controller config -->
        <param name="moveit_controller_manager" value="moveit_simple_controller_manager/MoveItSimpleControllerManager"/>
        <rosparam file="$(find mycobot_moveit)/config/controllers.yaml"/>

        <!-- planning config -->
        <param name="planning_plugin" value="ompl_interface/OMPLPlanner" />
        <param name="request_adapters" value="$(arg planning_adapters)" />
        <param name="start_state_max_bounds_error" value="0.1" />
        <rosparam command="load" file="$(find mycobot_moveit)/config/ompl_planning.yaml"/>
    </node>

    <!-- Rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mycobot_moveit)/rviz/moveit.rviz"/>

    <!-- myCobot -->
    <rosparam file="$(find mycobot_moveit)/config/trajectory_controller.yaml" command="load"/>
    <!-- <rosparam file="$(find mycobot_moveit)/config/mycobot_control.yaml" command="load"/> -->

    <node name="controller_manager"
        pkg="controller_manager"
        type="spawner" respawn="false"
        output="screen"
        args="joint_state_controller mycobot_trajectory_controller"/>

    <node name="mycobot_control" pkg="mycobot_moveit" type="mycobot_control" output="screen" respawn="false" />

    <!-- HW Interface -->
    <node name="hardware_interface" pkg="mycobot_moveit" type="mycobot_hw_interface.py" output="screen">
        <param name="mycobot_port" value="/dev/ttyUSB0"/>
    </node>

</launch>