<?xml version="1.0" ?>
<launch>

    <arg name="model" default="$(find myCobotROS)/urdf/mycobot_urdf.urdf"/>
    <!-- common -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- moveit setting -->
    <param name="robot_description_semantic" textfile="$(find mycobot_moveit)/config/firefighter.srdf" />
    <group ns="robot_description_planning">
        <rosparam command="load" file="$(find mycobot_moveit)/config/joint_limits.yaml"/>
    </group>
    <group ns="robot_description_kinematics">
        <rosparam command="load" file="$(find mycobot_moveit)/config/kinematics.yaml"/>
    </group>

    <arg name="planning_adapters" value="default_planner_request_adapters/AddTimeParameterization
		default_planner_request_adapters/FixWorkspaceBounds
		default_planner_request_adapters/FixStartStateBounds
		default_planner_request_adapters/FixStartStateCollision
		default_planner_request_adapters/FixStartStatePathConstraints" />

    <node name="move_group"  pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="">  
    <param name="robot_description" textfile="$(arg model)" />
    <!-- moveit setting -->
    <param name="robot_description_semantic" textfile="$(find mycobot_moveit)/config/firefighter.srdf" />

        <!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot -->

        <!-- controller config -->
        <param name="moveit_controller_manager" value="moveit_simple_controller_manager/MoveItSimpleControllerManager"/>
        <rosparam file="$(find mycobot_moveit)/config/controllers.yaml"/>

        <rosparam command="load" file="$(find mycobot_moveit)/config/ompl_planning.yaml"/>
    </node>

</launch>